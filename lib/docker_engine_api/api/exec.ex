# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DockerEngineAPI.Api.Exec do
  @moduledoc """
  API calls for all endpoints tagged `Exec`.
  """

  alias DockerEngineAPI.Connection
  import DockerEngineAPI.RequestBuilder

  @doc """
  Create an exec instance
  Run a command inside a running container.

  ## Parameters

  - connection (DockerEngineAPI.Connection): Connection to server
  - exec_config (ExecConfig): Exec configuration
  - id (String.t): ID or name of container
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %DockerEngineAPI.Model.IdResponse{}} on success
  {:error, info} on failure
  """
  def container_exec(connection, exec_config, id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/containers/#{id}/exec")
    |> add_param(:body, :execConfig, exec_config)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DockerEngineAPI.Model.IdResponse{})
  end

  @doc """
  Inspect an exec instance
  Return low-level information about an exec instance.

  ## Parameters

  - connection (DockerEngineAPI.Connection): Connection to server
  - id (String.t): Exec instance ID
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %DockerEngineAPI.Model.ExecInspectResponse{}} on success
  {:error, info} on failure
  """
  def exec_inspect(connection, id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/exec/#{id}/json")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DockerEngineAPI.Model.ExecInspectResponse{})
  end

  @doc """
  Resize an exec instance
  Resize the TTY session used by an exec instance. This endpoint only works if &#x60;tty&#x60; was specified as part of creating and starting the exec instance. 

  ## Parameters

  - connection (DockerEngineAPI.Connection): Connection to server
  - id (String.t): Exec instance ID
  - opts (KeywordList): [optional] Optional parameters
    - :h (integer()): Height of the TTY session in characters
    - :w (integer()): Width of the TTY session in characters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  def exec_resize(connection, id, opts \\ []) do
    optional_params = %{
      :h => :query,
      :w => :query
    }

    %{}
    |> method(:post)
    |> url("/exec/#{id}/resize")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Start an exec instance
  Starts a previously set up exec instance. If detach is true, this endpoint returns immediately after starting the command. Otherwise, it sets up an interactive session with the command. 

  ## Parameters

  - connection (DockerEngineAPI.Connection): Connection to server
  - id (String.t): Exec instance ID
  - opts (KeywordList): [optional] Optional parameters
    - :exec_start_config (ExecStartConfig): 

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  def exec_start(connection, id, opts \\ []) do
    optional_params = %{
      :execStartConfig => :body
    }

    %{}
    |> method(:post)
    |> url("/exec/#{id}/start")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end
end
